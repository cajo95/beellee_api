"""DescripciÃ³n de los cambios

Revision ID: 9b6bd24dada2
Revises: 
Create Date: 2024-05-12 22:14:19.875396

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9b6bd24dada2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activities')
    op.alter_column('eventual_income', 'value',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Float(precision=100),
               existing_nullable=False)
    op.alter_column('income', 'value',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Float(precision=100),
               existing_nullable=False)
    op.drop_constraint('income_user_id_fkey', 'income', type_='foreignkey')
    op.create_foreign_key(None, 'income', 'users', ['user_id'], ['user_id'])
    op.add_column('income_types', sa.Column('alias', sa.String(length=100), nullable=False))
    op.alter_column('purchases', 'total_payment',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('purchases', 'establishment',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.drop_constraint('purchases_user_id_fkey', 'purchases', type_='foreignkey')
    op.create_foreign_key(None, 'purchases', 'users', ['user_id'], ['user_id'])
    op.add_column('users', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('user_name', sa.String(length=100), nullable=False))
    op.add_column('users', sa.Column('surname', sa.String(length=100), nullable=False))
    op.add_column('users', sa.Column('phone', sa.String(length=100), nullable=False))
    op.add_column('users', sa.Column('activity', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('activity_type_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('income_type_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('activated', sa.Boolean(), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_constraint('users_user_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['user_name'])
    op.create_unique_constraint(None, 'users', ['email'])
    op.create_unique_constraint(None, 'users', ['user_id'])
    op.create_unique_constraint(None, 'users', ['phone'])
    op.drop_constraint('users_activity_id_fkey', 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'activity_type', ['activity_type_id'], ['id'])
    op.create_foreign_key(None, 'users', 'income_types', ['income_type_id'], ['id'])
    op.drop_column('users', 'activity_id')
    op.drop_column('users', 'lastname')
    op.drop_column('users', 'user')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('user', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('lastname', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('activity_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_activity_id_fkey', 'users', 'activities', ['activity_id'], ['id'])
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_user_key', 'users', ['user'])
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_column('users', 'activated')
    op.drop_column('users', 'income_type_id')
    op.drop_column('users', 'activity_type_id')
    op.drop_column('users', 'activity')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'surname')
    op.drop_column('users', 'user_name')
    op.drop_column('users', 'user_id')
    op.drop_constraint(None, 'purchases', type_='foreignkey')
    op.create_foreign_key('purchases_user_id_fkey', 'purchases', 'users', ['user_id'], ['id'])
    op.alter_column('purchases', 'establishment',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=250),
               existing_nullable=True)
    op.alter_column('purchases', 'total_payment',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('income_types', 'alias')
    op.drop_constraint(None, 'income', type_='foreignkey')
    op.create_foreign_key('income_user_id_fkey', 'income', 'users', ['user_id'], ['id'])
    op.alter_column('income', 'value',
               existing_type=sa.Float(precision=100),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('eventual_income', 'value',
               existing_type=sa.Float(precision=100),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.create_table('activities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='activities_pkey')
    )
    # ### end Alembic commands ###
